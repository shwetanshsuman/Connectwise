// <auto-generated />
using System;
using ConnectWiseBackend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConnectWiseBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230516180703_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConnectWiseBackend.Models.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LandMark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pincode")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CompanyId");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DueAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneratedById")
                        .HasColumnType("int");

                    b.Property<string>("GeneratedForEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("BranchId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.MasterEmail", b =>
                {
                    b.Property<int>("MasterEmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasterEmailId"));

                    b.Property<string>("EmailBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailSubject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MasterEmailId");

                    b.ToTable("MasterEmail");

                    b.HasData(
                        new
                        {
                            MasterEmailId = 1,
                            EmailBody = "<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <title>Company Registration</title>\r\n    <style>\r\n      /* Define any styles you want to apply to your email here */\r\n      body {{\r\n        font-family: Arial, sans-serif;\r\n        font-size: 16px;\r\n        color: #333;\r\n        line-height: 1.5;\r\n      }}\r\n      h1 {{\r\n        font-size: 24px;\r\n        margin-bottom: 10px;\r\n      }}\r\n      p {{\r\n        margin-bottom: 20px;\r\n      }}\r\n      strong {{\r\n        color: #007bff;\r\n      }}\r\n      .footer {{\r\n        margin-top: 50px;\r\n        font-size: 14px;\r\n        color: #666;\r\n      }}\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <h1>Hello, {0}'s Admin</h1>\r\n\r\n    <p>Thank you for signing up for our service. Your company has been successfully registered with ConnectWise.</p>\r\n\r\n    <p>Our Team at ConnectWise will always be available to assist you.</p>\r\n    <a href=\"{1}\" class=\"button\" style=\"background-color: #f44336; color: #fff; padding: 10px 20px; border: none; border-radius: 5px;\">ConnectWise</a>\r\n\r\n    <p>If you have any questions or concerns, please don't hesitate to contact us.</p>\r\n\r\n    <p class=\"footer\">Best regards,<br>ConnectWise Team</p>\r\n  </body>\r\n</html>\r\n",
                            EmailName = "Company Registration",
                            EmailSubject = "Company registered successfully"
                        },
                        new
                        {
                            MasterEmailId = 2,
                            EmailBody = "<!DOCTYPE html>\r\n <html>\r\n  <head>\r\n    <title>User Registration</title>\r\n    <style>\r\n      /* Define any styles you want to apply to your email here */\r\n      body {{\r\n        font-family: Arial, sans-serif;\r\n        font-size: 16px;\r\n        color: #333;\r\n        line-height: 1.5;\r\n      }}\r\n      h1 {{\r\n        font-size: 24px;\r\n        margin-bottom: 10px;\r\n      }}\r\n      p {{\r\n        margin-bottom: 20px;\r\n      }}\r\n      strong {{\r\n        color: #007bff;\r\n      }}\r\n      .footer {{\r\n        margin-top: 50px;\r\n        font-size: 14px;\r\n        color: #666;\r\n      }}\r\n      table {{\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n        border: 1px solid #000;\r\n      }}\r\n      th, td {{\r\n        padding: 8px;\r\n        text-align: left;\r\n        border-bottom: 1px solid #000;\r\n        border-right: 1px solid #000;\r\n      }}\r\n      th:last-child, td:last-child {{\r\n        border-right: none;\r\n      }}\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <h1>Hello, sir/madam</h1>\r\n    <p>Congratulations! You have been successfully registered on our application by your company {0}. Your username is {1} and password is {2}. We kindly request you to change your password using the 'Forgot Password' option.</p>\r\n\r\n    <p>Our Team at ConnectWise will always be available to assist you</p>\r\n    <a href=\"{3}\" class=\"button\" style=\"background-color: #f44336; color: #fff; padding: 10px 20px; border: none; border-radius: 5px;\"\">ConnectWise</a>\r\n\r\n    <p>If you have any questions or concerns, please don't hesitate to contact us.</p>\r\n\r\n    <p class=\"footer\">Best regards,<br>ConnectWise Team</p>\r\n  </body>\r\n</html>",
                            EmailName = "User Registration",
                            EmailSubject = "User registered successfully"
                        },
                        new
                        {
                            MasterEmailId = 3,
                            EmailBody = "<!DOCTYPE html>\r\n\r\n<html>\r\n  <head>\r\n    <title>Reminder</title>\r\n    <style>\r\n      /* Define any styles you want to apply to your email here */\r\n      body {{\r\n        font-family: Arial, sans-serif;\r\n        font-size: 16px;\r\n        color: #333;\r\n        line-height: 1.5;\r\n      }}\r\n      h1 {{\r\n        font-size: 24px;\r\n        margin-bottom: 10px;\r\n      }}\r\n      p {{\r\n        margin-bottom: 20px;\r\n      }}\r\n      strong {{\r\n        color: #007bff;\r\n      }}\r\n      .footer {{\r\n        margin-top: 50px;\r\n        font-size: 14px;\r\n        color: #666;\r\n      }}\r\n      table {{\r\n        border-collapse: collapse;\r\n        width: 100%;\r\n        border: 1px solid #000;\r\n      }}\r\n      th, td {{\r\n        padding: 8px;\r\n        text-align: left;\r\n        border-bottom: 1px solid #000;\r\n        border-right: 1px solid #000;\r\n      }}\r\n      th:last-child, td:last-child {{\r\n        border-right: none;\r\n      }}\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <h1>Hello, sir/madam</h1>\r\n    <p>This email is being delivered to you by {0} for the invoice {1}</p>\r\n    <p>Below, you will find a Pay Button which will redirect you to the payment gateway, where you will be able to pay for the invoice:</p>\r\n    <table>\r\n      <tr>\r\n        <th>Invoice</th>\r\n        <th></th>\r\n      </tr>\r\n      <tr>\r\n        <td>Name</td>\r\n        <td>{2}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Total Amount</td>\r\n        <td>{3}</td>\r\n      </tr>\r\n      <tr>\r\n        <td>Due Amount</td>\r\n        <td>{4}</td>\r\n      </tr>\r\n    </table>\r\n    <a href=\"{5}\" class=\"button\" style=\"background-color: #4CAF50; color: #fff; padding: 10px 20px; border: none; border-radius: 5px;\">Pay Now</a>\r\n    <p>Our team at ConnectWise will always be available to assist you.</p>\r\n    <a href=\"{6}\" class=\"button\" style=\"background-color: #f44336; color: #fff; padding: 10px 20px; border: none; border-radius: 5px;\">ConnectWise</a>\r\n    <p>If you have any questions or concerns, please don't hesitate to contact us.</p>\r\n    <p class=\"footer\">Best regards,<br>ConnectWise Team</p>\r\n  </body>\r\n</html>\r\n",
                            EmailName = "Unregistered User Reminder",
                            EmailSubject = "Invoice || ConnectWise"
                        },
                        new
                        {
                            MasterEmailId = 4,
                            EmailBody = "<!DOCTYPE html>\r\n            <html>\r\n                <head>\r\n                    <title>Invoice</title>\r\n                    <style>\r\n                        /* Define any styles you want to apply to your email here */\r\n                        body {{\r\n                            font-family: Arial, sans-serif;\r\n                            font-size: 16px;\r\n                            color: #333;\r\n                            line-height: 1.5;\r\n                        }}\r\n                        h1 {{\r\n                            font-size: 24px;\r\n                            margin-bottom: 10px;\r\n                        }}\r\n                        p {{\r\n                            margin-bottom: 20px;\r\n                        }}\r\n                        strong {{\r\n                            color: #007bff;\r\n                        }}\r\n                        .footer {{\r\n                            margin-top: 50px;\r\n                            font-size: 14px;\r\n                            color: #666;\r\n                        }}\r\n                        table{{\r\n                            border-collapse: collapse;\r\n                            width: 100%;\r\n                            border: 1px solid #000;\r\n                        }}\r\n                        th, td {{\r\n                            padding: 8px;\r\n                            text-align: left;\r\n                            border-bottom: 1px solid #000;\r\n                            border-right: 1px solid #000;\r\n                        }}\r\n                        th:last-child, td:last-child {{\r\n                            border-right: none;\r\n                        }}\r\n                    </style>\r\n                </head>\r\n                <body>\r\n                    <h1>Hello, sir/madam</h1>\r\n                    <p>This mail is been delivered to you by {0} for the invoice {1}</p>\r\n                    <p>The invoice {2} has a due date of {3}. Please make the complete payment before the due date; otherwise, a penalty will be charged.</p>\r\n                    <p>Our team at ConnectWise will always be present to help you.</p>\r\n                    <a href=\"{4}\" class=\"button\" style=\"background-color: #f44336; color: #fff; padding: 10px 20px; border: none; border-radius: 5px;\">ConnectWise</a>\r\n                    <p>If you have any questions or concerns, please don't hesitate to contact us.</p>\r\n                    <p class=\"footer\">Best regards,<br>ConnectWise Team</p>\r\n                </body>\r\n            </html>",
                            EmailName = "Invoice Reminder",
                            EmailSubject = "Invoice || ConnectWise"
                        },
                        new
                        {
                            MasterEmailId = 5,
                            EmailBody = "\r\n        <!DOCTYPE html>\r\n        <html>\r\n            <head>\r\n                <title>Forgot Password</title>\r\n                <style>\r\n                    /* Define any styles you want to apply to your email here */\r\n                    body {{\r\n                        font-family: Arial, sans-serif;\r\n                        font-size: 16px;\r\n                        color: #333;\r\n                        line-height: 1.5;\r\n                    }}\r\n                    h1 {{\r\n                        font-size: 24px;\r\n                        margin-bottom: 10px;\r\n                    }}\r\n                    p {{\r\n                        margin-bottom: 20px;\r\n                    }}\r\n                    strong {{\r\n                        color: #007bff;\r\n                    }}\r\n                    .footer {{\r\n                        margin-top: 50px;\r\n                        font-size: 14px;\r\n                        color: #666;\r\n                    }}\r\n                    table {{\r\n                        border-collapse: collapse;\r\n                        width: 100%;\r\n                        border: 1px solid #000;\r\n                    }}\r\n                    th, td {{\r\n                        padding: 8px;\r\n                        text-align: left;\r\n                        border-bottom: 1px solid #000;\r\n                    }}\r\n                    th:last-child, td:last-child {{\r\n                        border-right: none;\r\n                    }}\r\n                </style>\r\n            </head>\r\n            <body>\r\n                <h1>Hello sir/madam,</h1>\r\n                <p>Follow the button below to change your password:</p>\r\n                <a href=\"{0}\" class=\"button\" style=\"background-color: #f44336; color: #fff; padding: 10px 20px; border: none; border-radius: 5px;\">Change Password</a>\r\n                <p>Our team at ConnectWise will always be present to help you.</p>\r\n                <a href=\"{1}\" class=\"button\" style=\"background-color: #f44336; color: #fff; padding: 10px 20px; border: none; border-radius: 5px;\">ConnectWise</a>\r\n                <p>If you have any questions or concerns, please don't hesitate to contact us.</p>\r\n                <p class=\"footer\">Best regards,<br>ConnectWise Team</p>\r\n            </body>\r\n        </html>",
                            EmailName = "Forgot Password",
                            EmailSubject = "Reset password"
                        });
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReminderId"));

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("MessageTemplate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReminderId");

                    b.HasIndex("InvoiceId")
                        .IsUnique();

                    b.ToTable("Reminder");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.ReminderLog", b =>
                {
                    b.Property<int>("ReminderLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReminderLogId"));

                    b.Property<int>("ReminderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ReminderLogId");

                    b.HasIndex("ReminderId");

                    b.ToTable("ReminderLog");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Super Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Account Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "User"
                        });
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<float>("SubscriptionFees")
                        .HasColumnType("real");

                    b.Property<int>("TimePeriodInMonths")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId");

                    b.ToTable("Subscription");

                    b.HasData(
                        new
                        {
                            SubscriptionId = 1,
                            Description = "Sub 1",
                            IsActive = true,
                            SubscriptionFees = 3000f,
                            TimePeriodInMonths = 1
                        },
                        new
                        {
                            SubscriptionId = 2,
                            Description = "Sub 2",
                            IsActive = true,
                            SubscriptionFees = 5000f,
                            TimePeriodInMonths = 3
                        },
                        new
                        {
                            SubscriptionId = 3,
                            Description = "Sub 3",
                            IsActive = true,
                            SubscriptionFees = 8000f,
                            TimePeriodInMonths = 1
                        });
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPayemnt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("ModeofPayment")
                        .HasColumnType("int");

                    b.Property<int>("PayerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("BranchId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Branch", b =>
                {
                    b.HasOne("ConnectWiseBackend.Models.Company", "Company")
                        .WithMany("Branch")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Company", b =>
                {
                    b.HasOne("ConnectWiseBackend.Models.Subscription", "Subscription")
                        .WithMany("Company")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Invoice", b =>
                {
                    b.HasOne("ConnectWiseBackend.Models.Branch", "Branch")
                        .WithMany("Invoice")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Reminder", b =>
                {
                    b.HasOne("ConnectWiseBackend.Models.Invoice", "Invoice")
                        .WithOne("Reminder")
                        .HasForeignKey("ConnectWiseBackend.Models.Reminder", "InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.ReminderLog", b =>
                {
                    b.HasOne("ConnectWiseBackend.Models.Reminder", "Reminder")
                        .WithMany("ReminderLog")
                        .HasForeignKey("ReminderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reminder");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Transaction", b =>
                {
                    b.HasOne("ConnectWiseBackend.Models.Invoice", "Invoice")
                        .WithMany("Transaction")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.User", b =>
                {
                    b.HasOne("ConnectWiseBackend.Models.Branch", "Branch")
                        .WithMany("User")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ConnectWiseBackend.Models.Role", "Role")
                        .WithMany("User")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Branch", b =>
                {
                    b.Navigation("Invoice");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Company", b =>
                {
                    b.Navigation("Branch");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Invoice", b =>
                {
                    b.Navigation("Reminder");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Reminder", b =>
                {
                    b.Navigation("ReminderLog");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Role", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("ConnectWiseBackend.Models.Subscription", b =>
                {
                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
